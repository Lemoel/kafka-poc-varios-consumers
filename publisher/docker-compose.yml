version: "3.7"

networks:
  eventbus_local:
    name: eventbus_local

volumes:
  kafka: {}

services:
  zookeeper:
    image: debezium/zookeeper:1.5.0.Final
    container_name: poc-zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    networks:
      - eventbus_local
    labels:
      NAME: zookeeper

  kafka:
    image: debezium/kafka:1.5.0.Final
    container_name: poc-kafka
    hostname: kafka
    ports:
      - 9092:9092
    networks:
      - eventbus_local
    environment:
      BROKER_ID: 1
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.17.0.1:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      ZOOKEEPER_CONNECT: zookeeper:2181
    labels:
      NAME: kafka
    volumes:
      - kafka:/data
    depends_on:
      - zookeeper

  connect:
    image: debezium/connect:1.5.0.Final
    container_name: poc-connect
    hostname: connect
    ports:
      - 8084:8083
    networks:
      - eventbus_local
    depends_on:
      - zookeeper
      - kafka
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: "config_storage"
      OFFSET_STORAGE_TOPIC: "offset_storage"
      STATUS_STORAGE_TOPIC: "status_storage"
      KAFKA_DEBUG: "true"
      DEBUG_SUSPEND_FLAG: "n"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: poc-kafka-ui
    ports:
      - "9090:8080"
    restart: always
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
    networks:
      - eventbus_local